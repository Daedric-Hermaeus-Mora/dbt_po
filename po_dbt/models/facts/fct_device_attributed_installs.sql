{{
    config(
        materialized='incremental',
        unique_key='attribution_unique_id',  
        partition_by={
            "field": "install_time_mmp",
            "data_type": "timestamp",
            "granularity": "day"
        },
        cluster_by=['platform', 'mediasource', 'campaign'],
        on_schema_change='append_new_columns' ,
        tags=['fact','attrib']
    )
}}

WITH source_intermediate_installs AS (
    SELECT
        installtime as install_time_mmp,
        attribution_unique_id,
        appsflyerid,
        device_id,
        mediasource,
        campaign,
        adset,
        platform,                          -- This is the attribution platform
        join_method                        -- Useful for monitoring data quality of joins

        -- If there are other columns from int_device_attributed_installs you want in the fact table,
        -- add them here. For example:
        -- advertisingid,
        -- attr_idfa,
        -- attr_idfv

    FROM
        {{ ref('int_device_attributed_installs') }}
)


SELECT
    install_time_mmp,
    attribution_unique_id,
    appsflyerid,
    device_id,
    mediasource,
    campaign,
    adset,
    platform,
    join_method

FROM
    source_intermediate_installs
-- No QUALIFY needed here, as the int_model already handles deduplication
-- by attribution_unique_id. The MERGE statement generated by dbt will
-- use attribution_unique_id to update existing records or insert new ones.